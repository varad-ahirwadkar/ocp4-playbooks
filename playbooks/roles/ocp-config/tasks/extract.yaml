---

- name: Set tools directory path
  set_fact:
    tools_dir: "~/ocp4_tools"

- name: Create tools directory
  file:
    path: "{{ tools_dir }}"
    state: "{{ item }}"
    mode: '0755'
  with_items:
  - directory

- name: local-registry service
  block:
  - name: Restart local-registry service
    service:
      name: local-registry
      state: restarted

  - name: Wait for local-registry to restart
    wait_for:
      timeout: 15
  when: enable_local_registry

- name: Extract OCP4 tools from release image ( local-registry )
  when: enable_local_registry
  shell: |
    oc adm release extract --tools {{ release_image_override }} --registry-config='{{ ansible_env.HOME }}/.openshift/pull-secret-updated'
  args:
    chdir: "{{ tools_dir }}"

- name: Create pull-secret file
  when: not enable_local_registry
  copy:
    content: "{{ install_config.pull_secret }}"
    dest: "{{ tools_dir }}/pull-secret"

- name: Extract OCP4 tools from release image
  when: not enable_local_registry
  shell: |
    oc adm release extract --tools {{ release_image_override }} --registry-config='pull-secret'
  args:
    chdir: "{{ tools_dir }}"

- name: Find archive packages
  find:
    paths: "{{ tools_dir }}"
    patterns: "openshift-*.tar.gz"
  register: find_result

# - name: Unarchive OCP4 tool files
#   unarchive:
#     src: "{{ item.path }}"
#     dest: /usr/local/bin
#     remote_src: yes
#   with_items: "{{ find_result.files }}"

- name: Unarchive OCP4 tool files
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ tools_dir }}"
    remote_src: yes
  with_items: "{{ find_result.files }}"

- name: Copy OCP4 tool files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/bin
    remote_src: yes
  loop:
  - "{{ tools_dir }}/oc"
  - "{{ tools_dir }}/kubectl"

- name: Remove tools directory
  file:
    path: "{{ tools_dir }}"
    state: "{{ item }}"
    mode: '0755'
  with_items:
  - absent

