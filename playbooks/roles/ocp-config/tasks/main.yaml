---
# tasks file for ocp4 config

- name: Update DHCP server config for shared network
  become: true
  import_tasks: dhcpd_update.yaml
  when: dhcp_shared_network is defined and dhcp_shared_network

- name: Setup Squid proxy server
  import_tasks: squid.yaml
  when: setup_squid_proxy

- name: Extract OCP4 tools
  import_tasks: extract.yaml
  when: release_image_override != ""

- name: Setup time synchronisation with Chrony
  become: true
  import_tasks: chrony.yaml
  when: chronyconfig.enabled

- name: OCP config
  when: inventory_hostname in groups['bastion'][0]
  block:
  - name: Skip config if install workdir exist
    stat:
      path: "{{ workdir }}"
    register: dir_status

  - meta: end_play
    when: dir_status.stat.exists

  - name: Setup openshift workdir
    file:
      path: "{{ workdir }}"
      state: "{{ item }}"
      mode: '0755'
    with_items:
  #  - absent
    - directory

  - name: Generate install-config.yaml
    template:
      src: ../templates/install-config.yaml.j2
      dest: "{{ workdir }}/install-config.yaml"

  - name: backup the install-config.yaml
    copy:
      src: "{{ workdir }}/install-config.yaml"
      dest: "{{ workdir }}/install-config.yaml.back"
      remote_src: yes
      force: yes

  - name: Generate manifest files
    shell: "openshift-install create manifests --log-level {{ log_level }}"
    args:
      chdir: "{{ workdir }}"

  - name: Generate Machine Config Master
    template:
      src: ../templates/99-master-machineconfig.yaml.j2
      dest: "{{ workdir }}/openshift/99-master-machineconfig.yaml"

  - name: Generate Machine Config Worker
    template:
      src: ../templates/99-worker-machineconfig.yaml.j2
      dest: "{{ workdir }}/openshift/99-worker-machineconfig.yaml"

  - name: Setup network configuration
    template:
      src: ../templates/cluster-network-03-config.yml.j2
      dest: "{{ workdir }}/manifests/cluster-network-03-config.yml"
    when: cni_network_mtu is defined
 
  - name: Configure RHCOS kernel options via MachineConfig before installation
    when: rhcos_pre_kernel_options | length > 0
    import_tasks: preinstall-kernel.yaml
  
  - name: Remove the machine yaml files
    file:
      path: "{{ item }}"
      state: absent
    with_fileglob:
      - "{{ workdir }}/openshift/99_openshift-cluster-api_master-machines-*.yaml"
      - "{{ workdir }}/openshift/99_openshift-cluster-api_worker-machineset-*.yaml"

  - name: Make the control-plane un-schedulable
    lineinfile:
      path: "{{ workdir }}/manifests/cluster-scheduler-02-config.yml"
      regexp: '^(.*)mastersSchedulable: true'
      line: '\1mastersSchedulable: False'
      backrefs: yes
    when: worker_count|int > 0

  - name: Copy machineconfig files generated from helpernode
    copy:
      src: "{{ item }}"
      dest: "{{ workdir }}/manifests"
      remote_src: yes
    with_fileglob:
      - "/machineconfig/*-chrony-configuration.yaml"
    when: chronyconfig.enabled

  - name: Create ignition files
    shell: "OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE={{ release_image_override }} openshift-install create ignition-configs --log-level {{ log_level }}"
    args:
      chdir: "{{ workdir }}"

  - name: Copy update_ignition_bootstrap
    template:
      src: ../files/update_ignition_bootstrap.py
      dest: /tmp/update_ignition_bootstrap.py
      mode: '0755'

  - name: Update bootstrap ignition
    shell: "python3 /tmp/update_ignition_bootstrap.py"
    args:
      chdir: "{{ workdir }}"

  - name: Host ignition files
    become: true
    copy:
      src: "{{ item }}"
      dest: /var/www/html/ignition/
      mode: o+r
    with_fileglob:
      - "{{ workdir }}/*.ign"

  - name: Best effort SELinux repair - Apache
    shell: "restorecon -vR /var/www/html || true"
